% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_prune.R
\name{search_prune}
\alias{search_prune}
\title{Extract a subtree of a connected pine by iteratively including the shortest path to the point providing the best cost increase}
\usage{
search_prune(G, leaves = NA, weight = NULL, vcost = NULL)
}
\arguments{
\item{G}{connected pine to be pruned}

\item{leaves}{number of leaves to be kept, standard set to NA, in which case the search continues until either all nodes are included,
or the addition of further nodes would be random}

\item{weight}{optional reweighting vector of the edges of G}

\item{vcost}{optional vertex cost for which the sum is to be optimized (ignores weight if provided)}
}
\value{
a list storing the following items:
               - B: the pruned graph
                 encoded as an 'igraph' object
               - cost: a data.frame corresponding to the obtained cost according to the number of leaves
               - (if method is 'search') full_cost: a vector of the full cost of each component
               - (if vcost is not provided) includedE: a list containing the added edges in the tree at each iteration
               - (if vcost is provided) includedV: a list containing the added nodes in the tree at each iteration
}
\description{
Extract a subtree of a connected pine by iteratively including the shortest path to the point providing the best cost increase
}
