% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decompose.R
\name{decompose}
\alias{decompose}
\title{Decompose a subforest Fst in G in longest paths not passing through multifurcation points (branches) and assign all nodes to branches
The decomposition starts from an arbitrary leave within each tree of the forest Fst
If an edge in Fst connects two multifurcation points, its assignment will be randomly one of its neighboring edges in Fst}
\usage{
decompose(backbone, G = NULL, prob = TRUE, col = TRUE)
}
\arguments{
\item{backbone}{a backbone object, as returned from the 'backbone_pipe' function}

\item{G}{the original graph, only needed if not stored in 'backbone'}

\item{prob}{whether to assign nodes in G to paths according to a probability measure
if FALSE, then nodes are assigned to exactly one path (hard assignment), standard is TRUE}

\item{col}{whether to provide a coloring scheme for the paths and nodes, standard set to TRUE}
}
\value{
the backbone object storing the following items:
               - branch: a vector clustering the edges of backbone$B into paths
               - prob: a (sparse) n x k matrix, where n = |V(G)| and k is the number of resulting paths in backbone$B,
                 corresponding to a probabilistic assignment of the nodes of G according to these paths (if prob)
                 or a one-hot-encoding (if !prob)
               - (if col) palette: a vector of hex code colors, one for each path
               - (if col) col: a vector of |V(G)| hex code colors, interpolating between the palette colors according to prob
}
\description{
Decompose a subforest Fst in G in longest paths not passing through multifurcation points (branches) and assign all nodes to branches
The decomposition starts from an arbitrary leave within each tree of the forest Fst
If an edge in Fst connects two multifurcation points, its assignment will be randomly one of its neighboring edges in Fst
}
